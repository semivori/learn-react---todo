{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","TodoList","todos","elements","map","todo","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","toUpperCase","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","arr","propName","oldItem","toggleDone","toggleImportant","search","length","item","toLowerCase","indexOf","visibleItems","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.efffebad.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className={'app-header d-flex'}>\r\n            <h1>My To Do List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from \"./search-panel\";\r\n\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({term})\r\n        this.props.onSearchChange(term)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <input type={'text'}\r\n                   className={'form-control search-input'}\r\n                   placeholder='search'\r\n                   value={this.state.term}\r\n                   onChange={this.onSearchChange}\r\n            />\r\n        )\r\n    }\r\n};\r\n","import TodoListItem from \"./todo-list-item\";\r\n\r\nexport default TodoListItem;","import React, {Component} from  'react';\r\nimport './todo-list-item.css'\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n    render() {\r\n        const {\r\n            label,\r\n            onDeleted,\r\n            onToggleImportant,\r\n            onToggleDone,\r\n            done,\r\n            important\r\n        } = this.props;\r\n\r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n\r\n        if (important) {\r\n            classNames += ' important'\r\n        }\r\n\r\n        return (\r\n            <span className={classNames}>\r\n            <span className={'todo-list-item-label'}\r\n                  onClick={onToggleDone}\r\n            >\r\n                {label}\r\n            </span>\r\n\r\n            <button type={'button'}\r\n                    className={'btn btn-outline-success btn-sm float-right'}\r\n                    onClick={onToggleImportant}\r\n            >\r\n                <i className={'fa fa-exclamation'}/>\r\n            </button>\r\n\r\n            <button type={'button'}\r\n                    className={'btn btn-outline-danger btn-sm float-right'}\r\n                    onClick={onDeleted}\r\n            >\r\n                <i className={'fa fa-trash-o'}/>\r\n            </button>\r\n        </span>\r\n        );\r\n    }\r\n}","import TodoList from \"./todo-list\";\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from \"../todo-list-item\";\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n\r\n    const elements = todos.map((todo) => {\r\n\r\n        const { id, ...itemProps } = todo;\r\n\r\n        return (\r\n            <li key={id} className={'list-group-item'}>\r\n                <TodoListItem\r\n                    { ...itemProps }\r\n                    onDeleted = {() => onDeleted(id)}\r\n                    onToggleImportant = {() => onToggleImportant(id)}\r\n                    onToggleDone = {() => onToggleDone(id)}\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className='list-group todo-list'>\r\n            { elements }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import ItemStatusFilter from \"./item-status-filter\";\r\n\r\nexport default ItemStatusFilter;","import React, {Component} from 'react';\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'},\r\n    ];\r\n\r\n    render() {\r\n\r\n        const {filter, onFilterChange} = this.props;\r\n\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n\r\n            return (\r\n                <button type={'button'}\r\n                        className={`btn ${clazz}`}\r\n                        key={name}\r\n                        onClick={() => onFilterChange(name)}\r\n                >\r\n                    {label}\r\n                </button>);\r\n        });\r\n\r\n        return (\r\n            <div className={'btn-group'}>\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import ItemAddForm from \"./item-add-form\";\r\n\r\nexport default ItemAddForm;","import React, {Component} from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n      label: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value.toUpperCase()\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className={'item-add-form d-flex'}\r\n                  onSubmit={this.onSubmit}>\r\n                <input type={'text'}\r\n                       className={'form-control'}\r\n                       onChange={this.onLabelChange}\r\n                       placeholder={'to do'}\r\n                       value={this.state.label}\r\n                />\r\n                <button className={'btn btn-outline-secondary'}>\r\n                    Add Item\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}","import App from \"./app\";\r\n\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport AppHeader from \"../app-header\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport TodoList from \"../todo-list\";\r\nimport ItemStatusFilter from \"../item-status-filter\";\r\nimport ItemAddForm from \"../item-add-form\";\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink Coffee'),\r\n            this.createTodoItem('Watch TV Show'),\r\n            this.createTodoItem('Set Alarm'),\r\n        ],\r\n        term: '',\r\n        filter: 'all'\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label: label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++,\r\n        }\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({todoData}) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        })\r\n    };\r\n\r\n    addItem = (text) => {\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({todoData}) => {\r\n            const newArray = [\r\n                ...todoData,\r\n                newItem,\r\n            ];\r\n\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    toggleProperty = (arr, id, propName) => {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n\r\n        const oldItem = arr[idx];\r\n        const newItem = {\r\n            ...oldItem,\r\n            [propName]: !oldItem[propName]\r\n        };\r\n\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n\r\n    };\r\n\r\n    toggleDone = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            };\r\n        })\r\n    };\r\n\r\n    toggleImportant = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            };\r\n        })\r\n    };\r\n\r\n    search = (arr, term) => {\r\n        if (term.length === 0) {\r\n            return arr;\r\n        }\r\n\r\n        return  arr.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    };\r\n\r\n    filter = (arr, filter) => {\r\n        switch (filter) {\r\n            case 'all':\r\n                return arr;\r\n            case 'active':\r\n                return arr.filter((item) => !item.done);\r\n            case 'done':\r\n                return arr.filter((item) => item.done);\r\n            default:\r\n                return arr;\r\n        }\r\n    };\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({term});\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({filter});\r\n    };\r\n\r\n    render() {\r\n\r\n        const { todoData, term, filter } = this.state;\r\n\r\n        const visibleItems = this.filter(this.search(todoData, term), filter);\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className={'todo-app'}>\r\n                <AppHeader toDo={todoCount} done={doneCount} />\r\n\r\n                <div className={'top-panel d-flex'}>\r\n                    <SearchPanel onSearchChange={this.onSearchChange} />\r\n                    <ItemStatusFilter filter={filter} onFilterChange={this.onFilterChange} />\r\n                </div>\r\n\r\n                <TodoList todos={visibleItems}\r\n                          onDeleted={this.deleteItem}\r\n                          onToggleImportant={this.toggleImportant}\r\n                          onToggleDone={this.toggleDone}\r\n                />\r\n\r\n                <ItemAddForm onItemAdded={this.addItem} />\r\n            </div>\r\n        );\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from \"./components/app\";\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}